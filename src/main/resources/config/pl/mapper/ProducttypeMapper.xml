<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jin321.pl.dao.ProducttypeMapper" >
  <resultMap id="BaseResultMap" type="com.jin321.pl.model.Producttype" >
    <id column="tid" property="tid" jdbcType="INTEGER" />
    <result column="typename" property="typename" jdbcType="VARCHAR" />
    <result column="typeclass" property="typeclass" jdbcType="INTEGER" />
    <result column="highertid" property="highertid" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tid, typename, typeclass, highertid, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jin321.pl.model.ProducttypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from producttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from producttype
    where tid = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from producttype
    where tid = #{tid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jin321.pl.model.ProducttypeExample" >
    delete from producttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jin321.pl.model.Producttype" >
    insert into producttype (tid, typename, typeclass, 
      highertid, is_delete)
    values (#{tid,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR}, #{typeclass,jdbcType=INTEGER}, 
      #{highertid,jdbcType=INTEGER}, #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.jin321.pl.model.Producttype" >
    insert into producttype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tid,
      </if>
      <if test="typename != null" >
        typename,
      </if>
      <if test="typeclass != null" >
        typeclass,
      </if>
      <if test="highertid != null" >
        highertid,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="typename != null" >
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="typeclass != null" >
        #{typeclass,jdbcType=INTEGER},
      </if>
      <if test="highertid != null" >
        #{highertid,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jin321.pl.model.ProducttypeExample" resultType="java.lang.Integer" >
    select count(*) from producttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update producttype
    <set >
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.typename != null" >
        typename = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.typeclass != null" >
        typeclass = #{record.typeclass,jdbcType=INTEGER},
      </if>
      <if test="record.highertid != null" >
        highertid = #{record.highertid,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update producttype
    set tid = #{record.tid,jdbcType=INTEGER},
      typename = #{record.typename,jdbcType=VARCHAR},
      typeclass = #{record.typeclass,jdbcType=INTEGER},
      highertid = #{record.highertid,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jin321.pl.model.Producttype" >
    update producttype
    <set >
      <if test="typename != null" >
        typename = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="typeclass != null" >
        typeclass = #{typeclass,jdbcType=INTEGER},
      </if>
      <if test="highertid != null" >
        highertid = #{highertid,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where tid = #{tid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jin321.pl.model.Producttype" >
    update producttype
    set typename = #{typename,jdbcType=VARCHAR},
      typeclass = #{typeclass,jdbcType=INTEGER},
      highertid = #{highertid,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT}
    where tid = #{tid,jdbcType=INTEGER}
  </update>
</mapper>