<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jin321.pl.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.jin321.pl.model.Product" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="did" property="did" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="psummary" property="psummary" jdbcType="VARCHAR" />
    <result column="psellnum" property="psellnum" jdbcType="INTEGER" />
    <result column="ptypea" property="ptypea" jdbcType="INTEGER" />
    <result column="ptypeb" property="ptypeb" jdbcType="INTEGER" />
    <result column="ptypec" property="ptypec" jdbcType="INTEGER" />
    <result column="is_together" property="isTogether" jdbcType="BIT" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, did, pname, psummary, psellnum, ptypea, ptypeb, ptypec, is_together, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jin321.pl.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jin321.pl.model.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jin321.pl.model.Product" >
    insert into product (pid, did, pname, 
      psummary, psellnum, ptypea, 
      ptypeb, ptypec, is_together, 
      is_delete)
    values (#{pid,jdbcType=INTEGER}, #{did,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, 
      #{psummary,jdbcType=VARCHAR}, #{psellnum,jdbcType=INTEGER}, #{ptypea,jdbcType=INTEGER}, 
      #{ptypeb,jdbcType=INTEGER}, #{ptypec,jdbcType=INTEGER}, #{isTogether,jdbcType=BIT}, 
      #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.jin321.pl.model.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="did != null" >
        did,
      </if>
      <if test="pname != null" >
        pname,
      </if>
      <if test="psummary != null" >
        psummary,
      </if>
      <if test="psellnum != null" >
        psellnum,
      </if>
      <if test="ptypea != null" >
        ptypea,
      </if>
      <if test="ptypeb != null" >
        ptypeb,
      </if>
      <if test="ptypec != null" >
        ptypec,
      </if>
      <if test="isTogether != null" >
        is_together,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="did != null" >
        #{did,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="psummary != null" >
        #{psummary,jdbcType=VARCHAR},
      </if>
      <if test="psellnum != null" >
        #{psellnum,jdbcType=INTEGER},
      </if>
      <if test="ptypea != null" >
        #{ptypea,jdbcType=INTEGER},
      </if>
      <if test="ptypeb != null" >
        #{ptypeb,jdbcType=INTEGER},
      </if>
      <if test="ptypec != null" >
        #{ptypec,jdbcType=INTEGER},
      </if>
      <if test="isTogether != null" >
        #{isTogether,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jin321.pl.model.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.did != null" >
        did = #{record.did,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null" >
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.psummary != null" >
        psummary = #{record.psummary,jdbcType=VARCHAR},
      </if>
      <if test="record.psellnum != null" >
        psellnum = #{record.psellnum,jdbcType=INTEGER},
      </if>
      <if test="record.ptypea != null" >
        ptypea = #{record.ptypea,jdbcType=INTEGER},
      </if>
      <if test="record.ptypeb != null" >
        ptypeb = #{record.ptypeb,jdbcType=INTEGER},
      </if>
      <if test="record.ptypec != null" >
        ptypec = #{record.ptypec,jdbcType=INTEGER},
      </if>
      <if test="record.isTogether != null" >
        is_together = #{record.isTogether,jdbcType=BIT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      did = #{record.did,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      psummary = #{record.psummary,jdbcType=VARCHAR},
      psellnum = #{record.psellnum,jdbcType=INTEGER},
      ptypea = #{record.ptypea,jdbcType=INTEGER},
      ptypeb = #{record.ptypeb,jdbcType=INTEGER},
      ptypec = #{record.ptypec,jdbcType=INTEGER},
      is_together = #{record.isTogether,jdbcType=BIT},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jin321.pl.model.Product" >
    update product
    <set >
      <if test="did != null" >
        did = #{did,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="psummary != null" >
        psummary = #{psummary,jdbcType=VARCHAR},
      </if>
      <if test="psellnum != null" >
        psellnum = #{psellnum,jdbcType=INTEGER},
      </if>
      <if test="ptypea != null" >
        ptypea = #{ptypea,jdbcType=INTEGER},
      </if>
      <if test="ptypeb != null" >
        ptypeb = #{ptypeb,jdbcType=INTEGER},
      </if>
      <if test="ptypec != null" >
        ptypec = #{ptypec,jdbcType=INTEGER},
      </if>
      <if test="isTogether != null" >
        is_together = #{isTogether,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jin321.pl.model.Product" >
    update product
    set did = #{did,jdbcType=INTEGER},
      pname = #{pname,jdbcType=VARCHAR},
      psummary = #{psummary,jdbcType=VARCHAR},
      psellnum = #{psellnum,jdbcType=INTEGER},
      ptypea = #{ptypea,jdbcType=INTEGER},
      ptypeb = #{ptypeb,jdbcType=INTEGER},
      ptypec = #{ptypec,jdbcType=INTEGER},
      is_together = #{isTogether,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>